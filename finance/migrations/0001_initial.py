# Generated by Django 4.2.24 on 2025-10-07 08:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import finance.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('purchase', '0002_stockreturn_stockreceiptitem_discount_and_more'),
        ('crm', '0001_initial'),
        ('core', '0004_candidatedocument_alter_candidate_aadhar_number_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CreditNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CREDIT_NOTE_ID', models.CharField(default=finance.models.generate_credit_note_id, editable=False, max_length=20, unique=True)),
                ('credit_note_date', models.DateField(default=django.utils.timezone.now)),
                ('currency', models.CharField(choices=[('USD', 'USD'), ('EUR', 'EUR'), ('INR', 'INR'), ('GBP', 'GBP'), ('SGD', 'SGD')], default='INR', max_length=3)),
                ('billing_address', models.TextField(blank=True)),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('invoice_date', models.DateField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('payment_terms', models.CharField(choices=[('Net 15', 'Net 15'), ('Net 30', 'Net 30'), ('Net 45', 'Net 45'), ('Due on Receipt', 'Due on Receipt')], default='Net 30', max_length=20)),
                ('invoice_status', models.CharField(choices=[('Draft', 'Draft'), ('Sent', 'Sent'), ('Paid', 'Paid'), ('Overdue', 'Overdue'), ('Cancelled', 'Cancelled')], default='Draft', max_length=20)),
                ('payment_status', models.CharField(choices=[('Paid', 'Paid'), ('Partial', 'Partial'), ('Unpaid', 'Unpaid')], default='Unpaid', max_length=20)),
                ('invoice_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.branch')),
                ('created_by', models.ForeignKey(limit_choices_to={'department__department_name__icontains': 'sales'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.candidate')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.customer')),
                ('invoice_reference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.invoice')),
            ],
        ),
        migrations.CreateModel(
            name='DebitNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DEBIT_NOTE_ID', models.CharField(default=finance.models.generate_debit_note_id, editable=False, max_length=20, unique=True)),
                ('debit_note_date', models.DateField(default=django.utils.timezone.now)),
                ('currency', models.CharField(choices=[('USD', 'USD'), ('EUR', 'EUR'), ('INR', 'INR'), ('GBP', 'GBP'), ('SGD', 'SGD')], default='INR', max_length=3)),
                ('po_date', models.DateField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('payment_terms', models.CharField(choices=[('Net 30', 'Net 30'), ('Net 45', 'Net 45'), ('Net 90', 'Net 90'), ('Credit', 'Credit'), ('Advance', 'Advance'), ('Partial Advance', 'Partial Advance'), ('On Delivery (COD)', 'On Delivery (COD)'), ('Upon Invoice', 'Upon Invoice')], default='Net 30', max_length=20)),
                ('inco_terms', models.CharField(choices=[('FOB', 'FOB (Free On Board)'), ('CIF', 'CIF (Cost, Insurance & Freight)'), ('EXW', 'EXW (Ex Works)'), ('DDP', 'DDP (Delivered Duty Paid)'), ('DAP', 'DAP (Delivered at Place)'), ('FCA', 'FCA (Free Carrier)'), ('CFR', 'CFR (Cost and Freight)')], default='FOB', max_length=30)),
                ('payment_status', models.CharField(choices=[('Paid', 'Paid'), ('Partial', 'Partial'), ('Unpaid', 'Unpaid')], default='Unpaid', max_length=20)),
                ('credit_limit', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('purchase_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.branch')),
                ('created_by', models.ForeignKey(limit_choices_to={'department__department_name__icontains': 'sales'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.candidate')),
                ('po_reference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='purchase.purchaseorder')),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='DebitNoteRemark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('debit_note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='remarks', to='finance.debitnote')),
            ],
        ),
        migrations.CreateModel(
            name='DebitNotePaymentRecover',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid_to_vendor', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('balance_due_to_vendor', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('purchase_return_amount', models.DecimalField(decimal_places=2, default=0.0, editable=False, max_digits=10)),
                ('balance_to_recover', models.DecimalField(decimal_places=2, default=0.0, editable=False, max_digits=10)),
                ('refund_mode', models.CharField(choices=[('None', 'None'), ('Refund', 'Refund'), ('Adjust', 'Adjust'), ('Refund & Adjust', 'Refund & Adjust')], default='None', max_length=20)),
                ('refund_received', models.DecimalField(decimal_places=2, default=0.0, editable=False, max_digits=10)),
                ('refund_date', models.DateField(blank=True, editable=False, null=True)),
                ('adjusted_invoice_reference', models.CharField(blank=True, editable=False, max_length=100)),
                ('debit_note', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment_recover', to='finance.debitnote')),
            ],
        ),
        migrations.CreateModel(
            name='DebitNoteItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('returned_qty', models.IntegerField(default=0)),
                ('uom', models.CharField(blank=True, max_length=50)),
                ('return_reason', models.TextField(blank=True)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('tax', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('debit_note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='finance.debitnote')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.product')),
            ],
        ),
        migrations.CreateModel(
            name='DebitNoteAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='debit_note_attachments/')),
                ('debit_note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='finance.debitnote')),
            ],
        ),
        migrations.CreateModel(
            name='CreditNoteRemark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('credit_note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='remarks', to='finance.creditnote')),
            ],
        ),
        migrations.CreateModel(
            name='CreditNotePaymentRefund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid_by_customer', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('balance_due_by_customer', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('invoice_return_amount', models.DecimalField(decimal_places=2, default=0.0, editable=False, max_digits=10)),
                ('balance_to_refund', models.DecimalField(decimal_places=2, default=0.0, editable=False, max_digits=10)),
                ('refund_mode', models.CharField(choices=[('None', 'None'), ('Refund', 'Refund'), ('Adjust', 'Adjust'), ('Refund & Adjust', 'Refund & Adjust')], default='None', max_length=20)),
                ('refund_paid', models.DecimalField(decimal_places=2, default=0.0, editable=False, max_digits=10)),
                ('refund_date', models.DateField(blank=True, editable=False, null=True)),
                ('adjusted_invoice_reference', models.CharField(blank=True, editable=False, max_length=100)),
                ('credit_note', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment_refund', to='finance.creditnote')),
            ],
        ),
        migrations.CreateModel(
            name='CreditNoteItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('returned_qty', models.IntegerField(default=0)),
                ('uom', models.CharField(blank=True, max_length=50)),
                ('return_reason', models.TextField(blank=True)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('tax', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('credit_note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='finance.creditnote')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.product')),
            ],
        ),
        migrations.CreateModel(
            name='CreditNoteAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='credit_note_attachments/')),
                ('credit_note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='finance.creditnote')),
            ],
        ),
    ]
